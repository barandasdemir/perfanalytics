# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-lib:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lib
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./lib/package-lock.json
      - run: npm ci
      - run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: lib-artifact
          path: ./lib/dist/*
          if-no-files-found: error

  build-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./server/package-lock.json
      - run: npm ci
      - run: npm test

  build-dashboard:
    runs-on: ubuntu-latest
    needs: [build-api]
    defaults:
      run:
        working-directory: ./dashboard
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./dashboard/package-lock.json
      - run: npm ci
      - run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: dashboard-artifact
          path: ./dashboard/build/*
          if-no-files-found: error

  deploy:
    needs: [build-api, build-lib, build-dashboard]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Download lib artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: lib-artifact
          path: ./server/src/public
      - name: Download dashboard artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: dashboard-artifact
          path: ./server/src/public
      - uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API}}
          heroku_app_name: 'barandasdemir-perfanalytics'
          heroku_email: 'dasdemirbaran@gmail.com'
          appdir: ./server
      - name: Delete Artifact
        uses: GeekyEggo/delete-artifact@v1.0.0
        with:
          name: |
            lib-artifact
            dashboard-artifact
